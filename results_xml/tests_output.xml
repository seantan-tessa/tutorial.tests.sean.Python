<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="1" name="pytest" skips="0" tests="7" time="0.145"><testcase classname="tests.test_class.TestClass" file="tests\test_class.py" line="11" name="test_one" time="0.0004937648773193359"></testcase><testcase classname="tests.test_class.TestClass" file="tests\test_class.py" line="15" name="test_two" time="0.005204200744628906"><failure message="AssertionError: assert False
 +  where False = hasattr(&lt;class &apos;test_class.Student&apos;&gt;, &apos;isPresent&apos;)">self = &lt;test_class.TestClass object at 0x000001EF46580E10&gt;

    def test_two(self):
        x = Student
&gt;       assert hasattr(x, &apos;isPresent&apos;)
E       AssertionError: assert False
E        +  where False = hasattr(&lt;class &apos;test_class.Student&apos;&gt;, &apos;isPresent&apos;)

tests\test_class.py:18: AssertionError</failure></testcase><testcase classname="tests.test_even" file="tests\test_even.py" line="12" name="test_even_numerical" time="0.0010006427764892578"></testcase><testcase classname="tests.test_palindrome" file="tests\test_palindrome.py" line="12" name="test_palindrome_string" time="0.0010390281677246094"></testcase><testcase classname="tests.test_palindrome" file="tests\test_palindrome.py" line="16" name="test_palindrome_int" time="0.0005559921264648438"></testcase><testcase classname="tests.test_sample" file="tests\test_sample.py" line="10" name="test_answer" time="0.0"></testcase><testcase classname="tests.test_sysexit" file="tests\test_sysexit.py" line="12" name="test_mytest" time="0.0010387897491455078"></testcase></testsuite>